#ctrl+l clears console

#c is for constructor function
x = c(1,2,3)
y = c(4,5,1)
names=c("Jonas","Kristofer","Anna")

#access vector value by []
#all operations are typically by element

# I is a logical vector
I = y > 3
# "Take values of y for which I is true"
y[I]

#creating combined vector
z = (x,y)

#mean, sum, sin sort..
#?functionname for help

#creating regular sequence
x = c(1:10)
#1:0.5:10 does not work as in matlab..
#instead use seq()
x = seq(from=0,to = 1, length.out=10)
x = seq(from=0,to = 1, by=10)
#matrixes can be created
A = matrix(c(1,2,3,4),nrow=2,ncol=2)
#by row
B = matrix(c(1,2,3,4),nrow=2,ncol=2, byrow = T)
#Access matrix by square brackets
A[2,1]
#row,column
#print whole columns/rows:
A[2,]
A[,2]

#Dataframes, kind of like a relational table in SQL:

ID=c(1,2,3,4,5) #subject ID
g=c("m","f","m","f","f") #gender
h=c(188,150,160,149,123) #height
w=c(70,50,55,67,30) #weight

subjects = data.frame(ID=ID,height = h, weight = w,gender =g)
subjects$height #calling attribute
subjects$BMI = subjects$weight/(subjects$height/100)^2 #editing
#plot(subjects$weight,subjects$height)
subjects[subjects$gender == "f"] #logical vector as index for using rows

#Exporting and importing data:

#set working directory.. in files tab. "set as working directory".
#save table into directory:
write.table(x=subjects,file="Mydata.txt", sep = " ") #space as separator
# append = T to add data in existing folder
# read data..
x = read.table(file = "Mydata.txt", sep = " ", header = T) #header is first line of data
#also tools -> import dataset -> from textfile

#Plotting:

x = seq(from=0, to = 2*pi, length.out = 10)
y = sin(x)
plot(x,y, type = "b", col = "red", lty = 2, xlab = "my x label") #types, b, l.. lty = linetype
#add more lines or dots in the same object by lines() or points
lines(x,cos(x))
points(x,cos(x))

#Packages:
#faraway is a package with different datasets


#Excercise plot:

t = seq(from = 0, to = 2*pi, length.out = 100000)
x = 2*cos(t) - cos(2*t)
y = sin(2*t) - 2*sin(t)
plot(x,y, type = "l")

#Excercise dataset:
x = read.table(file = "newborn.txt", sep = ",", header = T)

#average height and weight of babies..

meanh = mean(x[,3])
meanw = mean(x[,2])

plot(x[,2],x[,3])

z = x[1] == "male"
demboiiz = x[3][z]

min(demboiiz)
max(demboiiz)

hist(demboiiz)

#if statements
w =3
{
if (w<4)
  {d=1}
else
  {d=2}
}

#for loop

a = 0
for (i in c(3,1,5))
{
  print(i)
}

#while

i = 1
while (i < 10)
{
  i = i+1
}

#writing own function

FinalGrade <- function(homeexam, bonus = 0, penalty = 0)
{
  total_points = homeexam + bonus - penalty
  {
    if (total_points<50)
    {grade = "U"}
    else
    {grade = "G"}
  }
  return(grade)
}

#CDF PDF

#dnorm, pnorm, rnorm, qnorm
#d = density, p = probability(cdf), q = quantile, r =random

#p(x<3)
pnorm(3,mean = 4, sd = sqrt(16))
#p(X<x) = 0.9
qnorm(0.95, mean = 4, sd = sqrt(16))
#fx(4)
dnorm(3, mean =4 ,sd = sqrt(16))
#simulate 3 random numbers
rnorm(3,mean =4 ,sd = sqrt(16))

#
x = seq(-10,20,length.out = 100)
x = 2
mu = seq(0,4, length.out = 100)
plot(x,dnorm(x,mean =mu, sd = sqrt(16)), type = "l")
